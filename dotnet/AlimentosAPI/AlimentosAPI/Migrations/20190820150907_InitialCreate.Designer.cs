// <auto-generated />
using System;
using AlimentosAPI.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlimentosAPI.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190820150907_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlimentosAPI.Models.Alimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calorias");

                    b.Property<double>("Carboidratos");

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<double>("FibraAlimentar");

                    b.Property<double>("GordurasSaturadas");

                    b.Property<double>("GordurasTotais");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<double>("Proteinas");

                    b.Property<int>("QuantidadeGramas");

                    b.Property<int>("Sodio");

                    b.HasKey("Id");

                    b.ToTable("Alimentos");
                });

            modelBuilder.Entity("AlimentosAPI.Models.AlimentoMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlimentoId");

                    b.Property<int>("MedidaId");

                    b.Property<double>("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoId");

                    b.HasIndex("MedidaId");

                    b.ToTable("AlimentosMedidas");
                });

            modelBuilder.Entity("AlimentosAPI.Models.AlimentoTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlimentoId");

                    b.Property<int>("TagId");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoId");

                    b.HasIndex("TagId");

                    b.ToTable("AlimentosTags");
                });

            modelBuilder.Entity("AlimentosAPI.Models.Medida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Medidas");
                });

            modelBuilder.Entity("AlimentosAPI.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("AlimentosAPI.Models.AlimentoMedida", b =>
                {
                    b.HasOne("AlimentosAPI.Models.Alimento", "Alimento")
                        .WithMany("Medidas")
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlimentosAPI.Models.Medida", "Medida")
                        .WithMany("Alimentos")
                        .HasForeignKey("MedidaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlimentosAPI.Models.AlimentoTag", b =>
                {
                    b.HasOne("AlimentosAPI.Models.Alimento", "Alimento")
                        .WithMany("Tags")
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlimentosAPI.Models.Tag", "Tag")
                        .WithMany("Alimentos")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
